plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "nu.studer.jooq" version "8.2.1"
}

group = 'dias.pedro'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
	targetCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	driver
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2022.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	// web clashes with webflux when trying to use RouterFunctions
//	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	compileOnly 'org.projectlombok:lombok'
	compileOnly 'org.jooq:jooq-codegen'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.hamcrest:hamcrest-library'

	jooqGenerator "jakarta.xml.bind:jakarta.xml.bind-api:3.0.1"
	jooqGenerator "org.postgresql:postgresql"
	jooqGenerator 'org.jooq:jooq-meta'
	jooqGenerator 'org.jooq:jooq-meta-extensions'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


tasks.named('bootJar') {     launchScript() }

jar {
	manifest {
		attributes(
				'Main-Class': 'dias.pedro.springboot.SpringbootApplication'
		)
	}
}

jooq {
	version = '3.18.4'

	configurations {
		main {
			generationTool {
				generator {
					name = "org.jooq.codegen.JavaGenerator"
					strategy {
						name = "org.jooq.codegen.DefaultGeneratorStrategy"
					}
					generate {
						relations = true
						deprecated = false
						records = true
						immutablePojos = true
						fluentSetters = true
						daos = true
					}
					target {
						packageName = "postgres"
						directory = "src/main/java/dias/pedro/springboot/model"
						clean = true
					}
					database {
						name = "org.jooq.meta.extensions.ddl.DDLDatabase"
						properties {
							property {
								key = 'dialect'
								value = 'PostgreSQL'
							}
							property {
								key = "scripts"
								value = "src/main/resources/schema.sql"
							}
							property {
								key = 'defaultNameCase'
								value = 'lower'
							}
						}
					}
				}
			}
		}
	}
}